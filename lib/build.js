const filter = require('lodash.filter');
const path = require('path');
const yaml = require('js-yaml');
const helpers = require('spacedoc-helpers');

/**
 * Create an HTML page out of a documentation object.
 * @param {PageData} data - Page object generated by `Spacedoc.parse()`.
 * @throws Will throw an error if no template was set with `Spacedoc.config()`.
 * @throws Will throw an error if the template encounters an error while rendering.
 * @returns {String} Rendered HTML string.
 */
module.exports = function build(data = {}) {
  // Render a template with the component's data and write it to disk
  let output = '';

  const helper = name => this.adapters[name].template({
    groups: data.docs[name],
    find: keys => filter(data.docs[name], keys),
    helpers: Object.assign({}, helpers, this.adapters[name].helpers),
  });

  // Extend file data with global data and template locals
  data = Object.assign({}, this.options.data, data, {
    spacedoc: helper,
    helpers,
    site: {
      pages: this.tree,
    },
  });

  // Catch template errors, because they won't show up in the Gulp console
  try {
    output = this.template(data);
  }
  catch (e) {
    console.warn('Spacedoc.build(): ', e);
  }

  if (this.options.keepFm) {
    output = `---\n${yaml.safeDump(data._frontMatter)}\n---\n\n${output}` ;
  }

  return output;
}
